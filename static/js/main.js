(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var mods = {
    refreshScreen: require('./refresh-screen'),
    submitVote: require('./submit-vote')
};

var _modules = _('[data-mod]');

if (_modules) {
    _modules.forEach(function (mod) {
        var name = mod.getAttribute('data-mod').split(/-/).reduce(function (sum, val) {
            return sum + (val.charAt(0).toUpperCase() + val.slice(1));
        }, '');

        mods[name.charAt(0).toLowerCase() + name.slice(1)]();
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfZjliOWJlYzIuanMiXSwibmFtZXMiOlsibW9kcyIsInJlZnJlc2hTY3JlZW4iLCJyZXF1aXJlIiwic3VibWl0Vm90ZSIsIl9tb2R1bGVzIiwiXyIsImZvckVhY2giLCJtb2QiLCJuYW1lIiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJzdW0iLCJ2YWwiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTztBQUNUQyxtQkFBZUMsUUFBUSxrQkFBUixDQUROO0FBRVRDLGdCQUFZRCxRQUFRLGVBQVI7QUFGSCxDQUFiOztBQU1BLElBQU1FLFdBQVdDLEVBQUUsWUFBRixDQUFqQjs7QUFFQSxJQUFHRCxRQUFILEVBQWE7QUFDVEEsYUFBU0UsT0FBVCxDQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEIsWUFBTUMsT0FBT0QsSUFBSUUsWUFBSixDQUFpQixVQUFqQixFQUE2QkMsS0FBN0IsQ0FBbUMsR0FBbkMsRUFBd0NDLE1BQXhDLENBQStDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RFLG1CQUFPRCxPQUFPQyxJQUFJQyxNQUFKLENBQVcsQ0FBWCxFQUFjQyxXQUFkLEtBQThCRixJQUFJRyxLQUFKLENBQVUsQ0FBVixDQUFyQyxDQUFQO0FBQ0gsU0FGWSxFQUVWLEVBRlUsQ0FBYjs7QUFJQWhCLGFBQUtRLEtBQUtNLE1BQUwsQ0FBWSxDQUFaLEVBQWVHLFdBQWYsS0FBK0JULEtBQUtRLEtBQUwsQ0FBVyxDQUFYLENBQXBDO0FBQ0gsS0FORDtBQU9IIiwiZmlsZSI6ImZha2VfZjliOWJlYzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb2RzID0ge1xuICAgIHJlZnJlc2hTY3JlZW46IHJlcXVpcmUoJy4vcmVmcmVzaC1zY3JlZW4nKSxcbiAgICBzdWJtaXRWb3RlOiByZXF1aXJlKCcuL3N1Ym1pdC12b3RlJylcbn07XG5cblxuY29uc3QgX21vZHVsZXMgPSBfKCdbZGF0YS1tb2RdJyk7XG5cbmlmKF9tb2R1bGVzKSB7XG4gICAgX21vZHVsZXMuZm9yRWFjaCgobW9kKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtb2QuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZCcpLnNwbGl0KC8tLykucmVkdWNlKChzdW0sIHZhbCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHN1bSArICh2YWwuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB2YWwuc2xpY2UoMSkpO1xuICAgICAgICB9LCAnJyk7XG5cbiAgICAgICAgbW9kc1tuYW1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgbmFtZS5zbGljZSgxKV0oKTtcbiAgICB9KTtcbn1cbiJdfQ==
},{"./refresh-screen":2,"./submit-vote":3}],2:[function(require,module,exports){
'use strict';

module.exports = function () {
    setInterval(function () {
        $.get('/lesson/' + $('#lessonNumber').text() + '/update', function (data) {
            $('#amountBored').text(data.amount_bored);
            $('#participants').text(data.participants);
        });
    }, 1000);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2gtc2NyZWVuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXRJbnRlcnZhbCIsIiQiLCJnZXQiLCJ0ZXh0IiwiZGF0YSIsImFtb3VudF9ib3JlZCIsInBhcnRpY2lwYW50cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQixZQUFNO0FBQ25CQyxnQkFBWSxZQUFNO0FBQ2RDLFVBQUVDLEdBQUYsQ0FBTSxhQUFhRCxFQUFFLGVBQUYsRUFBbUJFLElBQW5CLEVBQWIsR0FBeUMsU0FBL0MsRUFBMEQsVUFBQ0MsSUFBRCxFQUFVO0FBQ2hFSCxjQUFFLGNBQUYsRUFBa0JFLElBQWxCLENBQXVCQyxLQUFLQyxZQUE1QjtBQUNBSixjQUFFLGVBQUYsRUFBbUJFLElBQW5CLENBQXdCQyxLQUFLRSxZQUE3QjtBQUNILFNBSEQ7QUFJSCxLQUxELEVBS0csSUFMSDtBQU1ILENBUEQiLCJmaWxlIjoicmVmcmVzaC1zY3JlZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcbiAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICQuZ2V0KCcvbGVzc29uLycgKyAkKCcjbGVzc29uTnVtYmVyJykudGV4dCgpICsgJy91cGRhdGUnLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgJCgnI2Ftb3VudEJvcmVkJykudGV4dChkYXRhLmFtb3VudF9ib3JlZCk7XG4gICAgICAgICAgICAkKCcjcGFydGljaXBhbnRzJykudGV4dChkYXRhLnBhcnRpY2lwYW50cyk7XG4gICAgICAgIH0pXG4gICAgfSwgMTAwMCk7XG59O1xuIl19
},{}],3:[function(require,module,exports){
'use strict';

function pollSection(lessonId) {
    setInterval(function () {
        $.get('/vote/' + lessonId + '/update', function (data) {
            if (data['sectionNumber'] !== localStorage.getItem('section')) {
                localStorage.setItem('lesson', data['lesson.id']);
                location.reload();
            }
        });
    }, 1000);
}

module.exports = function () {
    var _voteBored = _('[data-mod=submit-vote]');

    _voteBored.find('a').forEach(function (link) {
        link.addEventListener('click', function (e) {
            e.preventDefault();

            if (!_voteBored.hasClass('voting--disabled')) {
                var _link = _(e.currentTarget);

                $.get(_link[0].href, function (data) {
                    if (data.success) {
                        _voteBored.find('a').addClass('link--disabled');
                        _voteBored.find('path')[0].setAttribute('fill', '#898989');
                        localStorage.setItem('lesson', _voteBored[0].dataset.section);
                        pollSection(_voteBored[0].dataset.section);
                    }
                });
            }
        });
    });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1Ym1pdC12b3RlLmpzIl0sIm5hbWVzIjpbInBvbGxTZWN0aW9uIiwibGVzc29uSWQiLCJzZXRJbnRlcnZhbCIsIiQiLCJnZXQiLCJkYXRhIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJsb2NhdGlvbiIsInJlbG9hZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfdm90ZUJvcmVkIiwiXyIsImZpbmQiLCJmb3JFYWNoIiwibGluayIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYXNDbGFzcyIsIl9saW5rIiwiY3VycmVudFRhcmdldCIsImhyZWYiLCJzdWNjZXNzIiwiYWRkQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJkYXRhc2V0Iiwic2VjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxXQUFULENBQXFCQyxRQUFyQixFQUErQjtBQUMzQkMsZ0JBQVksWUFBTTtBQUNkQyxVQUFFQyxHQUFGLFlBQWVILFFBQWYsY0FBa0MsVUFBQ0ksSUFBRCxFQUFVO0FBQ3hDLGdCQUFHQSxLQUFLLGVBQUwsTUFBMEJDLGFBQWFDLE9BQWIsQ0FBcUIsU0FBckIsQ0FBN0IsRUFBOEQ7QUFDMURELDZCQUFhRSxPQUFiLENBQXFCLFFBQXJCLEVBQStCSCxLQUFLLFdBQUwsQ0FBL0I7QUFDQUkseUJBQVNDLE1BQVQ7QUFDSDtBQUNKLFNBTEQ7QUFNSCxLQVBELEVBT0csSUFQSDtBQVFIOztBQUdEQyxPQUFPQyxPQUFQLEdBQWlCLFlBQU07QUFDbkIsUUFBTUMsYUFBYUMsRUFBRSx3QkFBRixDQUFuQjs7QUFFQUQsZUFBV0UsSUFBWCxDQUFnQixHQUFoQixFQUFxQkMsT0FBckIsQ0FBNkIsVUFBQ0MsSUFBRCxFQUFVO0FBQ25DQSxhQUFLQyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixVQUFTQyxDQUFULEVBQVk7QUFDdkNBLGNBQUVDLGNBQUY7O0FBRUEsZ0JBQUcsQ0FBQ1AsV0FBV1EsUUFBWCxDQUFvQixrQkFBcEIsQ0FBSixFQUE2QztBQUN6QyxvQkFBTUMsUUFBUVIsRUFBRUssRUFBRUksYUFBSixDQUFkOztBQUVBcEIsa0JBQUVDLEdBQUYsQ0FBTWtCLE1BQU0sQ0FBTixFQUFTRSxJQUFmLEVBQXFCLFVBQUNuQixJQUFELEVBQVU7QUFDM0Isd0JBQUlBLEtBQUtvQixPQUFULEVBQWtCO0FBQ2RaLG1DQUFXRSxJQUFYLENBQWdCLEdBQWhCLEVBQXFCVyxRQUFyQixDQUE4QixnQkFBOUI7QUFDQWIsbUNBQVdFLElBQVgsQ0FBZ0IsTUFBaEIsRUFBd0IsQ0FBeEIsRUFBMkJZLFlBQTNCLENBQXdDLE1BQXhDLEVBQWdELFNBQWhEO0FBQ0FyQixxQ0FBYUUsT0FBYixDQUFxQixRQUFyQixFQUErQkssV0FBVyxDQUFYLEVBQWNlLE9BQWQsQ0FBc0JDLE9BQXJEO0FBQ0E3QixvQ0FBWWEsV0FBVyxDQUFYLEVBQWNlLE9BQWQsQ0FBc0JDLE9BQWxDO0FBQ0g7QUFDSixpQkFQRDtBQVFIO0FBQ0osU0FmRDtBQWdCSCxLQWpCRDtBQWtCSCxDQXJCRCIsImZpbGUiOiJzdWJtaXQtdm90ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHBvbGxTZWN0aW9uKGxlc3NvbklkKSB7XG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAkLmdldChgL3ZvdGUvJHtsZXNzb25JZH0vdXBkYXRlYCwgKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGlmKGRhdGFbJ3NlY3Rpb25OdW1iZXInXSAhPT0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NlY3Rpb24nKSkge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdsZXNzb24nLCBkYXRhWydsZXNzb24uaWQnXSk7XG4gICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSwgMTAwMCk7XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XG4gICAgY29uc3QgX3ZvdGVCb3JlZCA9IF8oJ1tkYXRhLW1vZD1zdWJtaXQtdm90ZV0nKTtcblxuICAgIF92b3RlQm9yZWQuZmluZCgnYScpLmZvckVhY2goKGxpbmspID0+IHtcbiAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgaWYoIV92b3RlQm9yZWQuaGFzQ2xhc3MoJ3ZvdGluZy0tZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9saW5rID0gXyhlLmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgICAgICAgICAgICAgJC5nZXQoX2xpbmtbMF0uaHJlZiwgKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVCb3JlZC5maW5kKCdhJykuYWRkQ2xhc3MoJ2xpbmstLWRpc2FibGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdm90ZUJvcmVkLmZpbmQoJ3BhdGgnKVswXS5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnIzg5ODk4OScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xlc3NvbicsIF92b3RlQm9yZWRbMF0uZGF0YXNldC5zZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvbGxTZWN0aW9uKF92b3RlQm9yZWRbMF0uZGF0YXNldC5zZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfSAgIFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4iXX0=
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
