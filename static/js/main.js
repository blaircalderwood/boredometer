(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var mods = {
    refreshScreen: require('./refresh-screen'),
    submitVote: require('./submit-vote')
};

var _modules = _('[data-mod]');

if (_modules) {
    _modules.forEach(function (mod) {
        var name = mod.getAttribute('data-mod').split(/-/).reduce(function (sum, val) {
            return sum + (val.charAt(0).toUpperCase() + val.slice(1));
        }, '');

        mods[name.charAt(0).toLowerCase() + name.slice(1)]();
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfNjI1MTcyZWUuanMiXSwibmFtZXMiOlsibW9kcyIsInJlZnJlc2hTY3JlZW4iLCJyZXF1aXJlIiwic3VibWl0Vm90ZSIsIl9tb2R1bGVzIiwiXyIsImZvckVhY2giLCJtb2QiLCJuYW1lIiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJzdW0iLCJ2YWwiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTztBQUNUQyxtQkFBZUMsUUFBUSxrQkFBUixDQUROO0FBRVRDLGdCQUFZRCxRQUFRLGVBQVI7QUFGSCxDQUFiOztBQU1BLElBQU1FLFdBQVdDLEVBQUUsWUFBRixDQUFqQjs7QUFFQSxJQUFHRCxRQUFILEVBQWE7QUFDVEEsYUFBU0UsT0FBVCxDQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEIsWUFBTUMsT0FBT0QsSUFBSUUsWUFBSixDQUFpQixVQUFqQixFQUE2QkMsS0FBN0IsQ0FBbUMsR0FBbkMsRUFBd0NDLE1BQXhDLENBQStDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RFLG1CQUFPRCxPQUFPQyxJQUFJQyxNQUFKLENBQVcsQ0FBWCxFQUFjQyxXQUFkLEtBQThCRixJQUFJRyxLQUFKLENBQVUsQ0FBVixDQUFyQyxDQUFQO0FBQ0gsU0FGWSxFQUVWLEVBRlUsQ0FBYjs7QUFJQWhCLGFBQUtRLEtBQUtNLE1BQUwsQ0FBWSxDQUFaLEVBQWVHLFdBQWYsS0FBK0JULEtBQUtRLEtBQUwsQ0FBVyxDQUFYLENBQXBDO0FBQ0gsS0FORDtBQU9IIiwiZmlsZSI6ImZha2VfNjI1MTcyZWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb2RzID0ge1xuICAgIHJlZnJlc2hTY3JlZW46IHJlcXVpcmUoJy4vcmVmcmVzaC1zY3JlZW4nKSxcbiAgICBzdWJtaXRWb3RlOiByZXF1aXJlKCcuL3N1Ym1pdC12b3RlJylcbn07XG5cblxuY29uc3QgX21vZHVsZXMgPSBfKCdbZGF0YS1tb2RdJyk7XG5cbmlmKF9tb2R1bGVzKSB7XG4gICAgX21vZHVsZXMuZm9yRWFjaCgobW9kKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtb2QuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZCcpLnNwbGl0KC8tLykucmVkdWNlKChzdW0sIHZhbCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHN1bSArICh2YWwuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB2YWwuc2xpY2UoMSkpO1xuICAgICAgICB9LCAnJyk7XG5cbiAgICAgICAgbW9kc1tuYW1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgbmFtZS5zbGljZSgxKV0oKTtcbiAgICB9KTtcbn1cbiJdfQ==
},{"./refresh-screen":2,"./submit-vote":3}],2:[function(require,module,exports){
'use strict';

module.exports = function () {
    setInterval(function () {
        $.get('/lesson/' + $('#lessonNumber').text() + '/update', function (data) {
            $('#amountBored').text(data.amount_bored);
            $('#participants').text(data.participants);
        });
    }, 1000);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2gtc2NyZWVuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXRJbnRlcnZhbCIsIiQiLCJnZXQiLCJ0ZXh0IiwiZGF0YSIsImFtb3VudF9ib3JlZCIsInBhcnRpY2lwYW50cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQixZQUFNO0FBQ25CQyxnQkFBWSxZQUFNO0FBQ2RDLFVBQUVDLEdBQUYsQ0FBTSxhQUFhRCxFQUFFLGVBQUYsRUFBbUJFLElBQW5CLEVBQWIsR0FBeUMsU0FBL0MsRUFBMEQsVUFBQ0MsSUFBRCxFQUFVO0FBQ2hFSCxjQUFFLGNBQUYsRUFBa0JFLElBQWxCLENBQXVCQyxLQUFLQyxZQUE1QjtBQUNBSixjQUFFLGVBQUYsRUFBbUJFLElBQW5CLENBQXdCQyxLQUFLRSxZQUE3QjtBQUNILFNBSEQ7QUFJSCxLQUxELEVBS0csSUFMSDtBQU1ILENBUEQiLCJmaWxlIjoicmVmcmVzaC1zY3JlZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcbiAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICQuZ2V0KCcvbGVzc29uLycgKyAkKCcjbGVzc29uTnVtYmVyJykudGV4dCgpICsgJy91cGRhdGUnLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgJCgnI2Ftb3VudEJvcmVkJykudGV4dChkYXRhLmFtb3VudF9ib3JlZCk7XG4gICAgICAgICAgICAkKCcjcGFydGljaXBhbnRzJykudGV4dChkYXRhLnBhcnRpY2lwYW50cyk7XG4gICAgICAgIH0pXG4gICAgfSwgMTAwMCk7XG59O1xuIl19
},{}],3:[function(require,module,exports){
'use strict';

function pollSection() {
    setInterval(function () {
        $.get('/vote/' + localStorage.getItem('lessonId') + '/update', function (data) {
            if (data['sectionNumber'] !== parseInt(localStorage.getItem('sectionNumber'))) {
                localStorage.setItem('sectionNumber', data['sectionNumber']);
                _('.js-voted-message').addClass('hide');
                _('[data-mod=submit-vote]').removeClass('voting--disabled');
            }
        });
    }, 1000);
}

module.exports = function () {
    var _voteBored = _('[data-mod=submit-vote]');

    _voteBored.find('.vote-section__links').forEach(function (link) {
        link.addEventListener('click', function (e) {
            e.preventDefault();

            if (!_voteBored.hasClass('voting--disabled')) {
                var _link = _(e.currentTarget);

                $.get(_link[0].href, function (data) {
                    if (data.success) {
                        pollSection();
                        _('.js-voted-message').removeClass('hide');
                        _voteBored.addClass('voting--disabled');
                    }
                });
            }
        });
    });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1Ym1pdC12b3RlLmpzIl0sIm5hbWVzIjpbInBvbGxTZWN0aW9uIiwic2V0SW50ZXJ2YWwiLCIkIiwiZ2V0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImRhdGEiLCJwYXJzZUludCIsInNldEl0ZW0iLCJfIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJfdm90ZUJvcmVkIiwiZmluZCIsImZvckVhY2giLCJsaW5rIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImhhc0NsYXNzIiwiX2xpbmsiLCJjdXJyZW50VGFyZ2V0IiwiaHJlZiIsInN1Y2Nlc3MiXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsV0FBVCxHQUF1QjtBQUNuQkMsZ0JBQVksWUFBTTtBQUNkQyxVQUFFQyxHQUFGLFlBQWVDLGFBQWFDLE9BQWIsQ0FBcUIsVUFBckIsQ0FBZixjQUEwRCxVQUFDQyxJQUFELEVBQVU7QUFDaEUsZ0JBQUdBLEtBQUssZUFBTCxNQUEwQkMsU0FBU0gsYUFBYUMsT0FBYixDQUFxQixlQUFyQixDQUFULENBQTdCLEVBQThFO0FBQzFFRCw2QkFBYUksT0FBYixDQUFxQixlQUFyQixFQUFzQ0YsS0FBSyxlQUFMLENBQXRDO0FBQ0FHLGtCQUFFLG1CQUFGLEVBQXVCQyxRQUF2QixDQUFnQyxNQUFoQztBQUNBRCxrQkFBRSx3QkFBRixFQUE0QkUsV0FBNUIsQ0FBd0Msa0JBQXhDO0FBQ0g7QUFDSixTQU5EO0FBT0gsS0FSRCxFQVFHLElBUkg7QUFTSDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQixZQUFNO0FBQ25CLFFBQU1DLGFBQWFMLEVBQUUsd0JBQUYsQ0FBbkI7O0FBRUFLLGVBQVdDLElBQVgsQ0FBZ0Isc0JBQWhCLEVBQXdDQyxPQUF4QyxDQUFnRCxVQUFDQyxJQUFELEVBQVU7QUFDdERBLGFBQUtDLGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLFVBQVNDLENBQVQsRUFBWTtBQUN2Q0EsY0FBRUMsY0FBRjs7QUFFQSxnQkFBRyxDQUFDTixXQUFXTyxRQUFYLENBQW9CLGtCQUFwQixDQUFKLEVBQTZDO0FBQ3pDLG9CQUFNQyxRQUFRYixFQUFFVSxFQUFFSSxhQUFKLENBQWQ7O0FBRUFyQixrQkFBRUMsR0FBRixDQUFNbUIsTUFBTSxDQUFOLEVBQVNFLElBQWYsRUFBcUIsVUFBQ2xCLElBQUQsRUFBVTtBQUMzQix3QkFBSUEsS0FBS21CLE9BQVQsRUFBa0I7QUFDZHpCO0FBQ0FTLDBCQUFFLG1CQUFGLEVBQXVCRSxXQUF2QixDQUFtQyxNQUFuQztBQUNBRyxtQ0FBV0osUUFBWCxDQUFvQixrQkFBcEI7QUFDSDtBQUNKLGlCQU5EO0FBT0g7QUFDSixTQWREO0FBZUgsS0FoQkQ7QUFpQkgsQ0FwQkQiLCJmaWxlIjoic3VibWl0LXZvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBwb2xsU2VjdGlvbigpIHtcbiAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICQuZ2V0KGAvdm90ZS8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdsZXNzb25JZCcpfS91cGRhdGVgLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgaWYoZGF0YVsnc2VjdGlvbk51bWJlciddICE9PSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2VjdGlvbk51bWJlcicpKSkge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzZWN0aW9uTnVtYmVyJywgZGF0YVsnc2VjdGlvbk51bWJlciddKTtcbiAgICAgICAgICAgICAgICBfKCcuanMtdm90ZWQtbWVzc2FnZScpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgXygnW2RhdGEtbW9kPXN1Ym1pdC12b3RlXScpLnJlbW92ZUNsYXNzKCd2b3RpbmctLWRpc2FibGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSwgMTAwMCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKCkgPT4ge1xuICAgIGNvbnN0IF92b3RlQm9yZWQgPSBfKCdbZGF0YS1tb2Q9c3VibWl0LXZvdGVdJyk7XG5cbiAgICBfdm90ZUJvcmVkLmZpbmQoJy52b3RlLXNlY3Rpb25fX2xpbmtzJykuZm9yRWFjaCgobGluaykgPT4ge1xuICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICBpZighX3ZvdGVCb3JlZC5oYXNDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2xpbmsgPSBfKGUuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICAgICAgICAgICAkLmdldChfbGlua1swXS5ocmVmLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb2xsU2VjdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgXygnLmpzLXZvdGVkLW1lc3NhZ2UnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVCb3JlZC5hZGRDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICB9ICAgXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbiJdfQ==
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
