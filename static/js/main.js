(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var mods = {
    refreshScreen: require('./refresh-screen'),
    submitVote: require('./submit-vote')
};

var _modules = _('[data-mod]');

if (_modules) {
    _modules.forEach(function (mod) {
        var name = mod.getAttribute('data-mod').split(/-/).reduce(function (sum, val) {
            return sum + (val.charAt(0).toUpperCase() + val.slice(1));
        }, '');

        mods[name.charAt(0).toLowerCase() + name.slice(1)](mod);
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfMTRkOTIyZjguanMiXSwibmFtZXMiOlsibW9kcyIsInJlZnJlc2hTY3JlZW4iLCJyZXF1aXJlIiwic3VibWl0Vm90ZSIsIl9tb2R1bGVzIiwiXyIsImZvckVhY2giLCJtb2QiLCJuYW1lIiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJzdW0iLCJ2YWwiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTztBQUNUQyxtQkFBZUMsUUFBUSxrQkFBUixDQUROO0FBRVRDLGdCQUFZRCxRQUFRLGVBQVI7QUFGSCxDQUFiOztBQU1BLElBQU1FLFdBQVdDLEVBQUUsWUFBRixDQUFqQjs7QUFFQSxJQUFHRCxRQUFILEVBQWE7QUFDVEEsYUFBU0UsT0FBVCxDQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEIsWUFBTUMsT0FBT0QsSUFBSUUsWUFBSixDQUFpQixVQUFqQixFQUE2QkMsS0FBN0IsQ0FBbUMsR0FBbkMsRUFBd0NDLE1BQXhDLENBQStDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RFLG1CQUFPRCxPQUFPQyxJQUFJQyxNQUFKLENBQVcsQ0FBWCxFQUFjQyxXQUFkLEtBQThCRixJQUFJRyxLQUFKLENBQVUsQ0FBVixDQUFyQyxDQUFQO0FBQ0gsU0FGWSxFQUVWLEVBRlUsQ0FBYjs7QUFJQWhCLGFBQUtRLEtBQUtNLE1BQUwsQ0FBWSxDQUFaLEVBQWVHLFdBQWYsS0FBK0JULEtBQUtRLEtBQUwsQ0FBVyxDQUFYLENBQXBDLEVBQW1EVCxHQUFuRDtBQUNILEtBTkQ7QUFPSCIsImZpbGUiOiJmYWtlXzE0ZDkyMmY4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9kcyA9IHtcbiAgICByZWZyZXNoU2NyZWVuOiByZXF1aXJlKCcuL3JlZnJlc2gtc2NyZWVuJyksXG4gICAgc3VibWl0Vm90ZTogcmVxdWlyZSgnLi9zdWJtaXQtdm90ZScpXG59O1xuXG5cbmNvbnN0IF9tb2R1bGVzID0gXygnW2RhdGEtbW9kXScpO1xuXG5pZihfbW9kdWxlcykge1xuICAgIF9tb2R1bGVzLmZvckVhY2goKG1vZCkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0gbW9kLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2QnKS5zcGxpdCgvLS8pLnJlZHVjZSgoc3VtLCB2YWwpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBzdW0gKyAodmFsLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdmFsLnNsaWNlKDEpKTtcbiAgICAgICAgfSwgJycpO1xuXG4gICAgICAgIG1vZHNbbmFtZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIG5hbWUuc2xpY2UoMSldKG1vZCk7XG4gICAgfSk7XG59XG4iXX0=
},{"./refresh-screen":2,"./submit-vote":3}],2:[function(require,module,exports){
'use strict';

module.exports = function () {
    var _timer = _('.js-timer');

    _('.js-share-lesson')[0].addEventListener('click', function () {
        window.open(this.href, '_blank', 'height=450, width=650, left=20, location=no, top=20, titlebar=no, menubar=no');
    });

    function enableNextSection() {
        _(document.lessonControl).find('[type=submit]')[0].removeAttribute('disabled');
        _('.js-next-section').removeClass('hide');
    }

    function _update() {
        var timeElapsed = Math.floor(-(localStorage.getItem('startTime') - new Date().getTime()) / 1000);
        var hours = Math.floor(timeElapsed / 3600);
        var mins = ('0' + Math.floor(timeElapsed / 60)).slice(-2);
        var secs = ('0' + Math.floor(timeElapsed)).slice(-2);
        hours = hours ? ('0' + hours + ':').slice(-2) : '';

        _timer[0].innerText = '' + hours + mins + ':' + secs;
        window.setInterval(_update, 100);
    }

    setInterval(function () {
        $.get('/lesson/' + localStorage.getItem('lecturerLessonId') + '/update', function (data) {
            $('#participants').text(data.participants);

            if (data.participants) {
                if (!localStorage.getItem('startTime')) {
                    localStorage.setItem('startTime', new Date().getTime());
                }

                _update();

                if (data.participants === data.amount_bored) {
                    enableNextSection();
                }
            }
        });
    }, 1000);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2gtc2NyZWVuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJfdGltZXIiLCJfIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsIm9wZW4iLCJocmVmIiwiZW5hYmxlTmV4dFNlY3Rpb24iLCJkb2N1bWVudCIsImxlc3NvbkNvbnRyb2wiLCJmaW5kIiwicmVtb3ZlQXR0cmlidXRlIiwicmVtb3ZlQ2xhc3MiLCJfdXBkYXRlIiwidGltZUVsYXBzZWQiLCJNYXRoIiwiZmxvb3IiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiRGF0ZSIsImdldFRpbWUiLCJob3VycyIsIm1pbnMiLCJzbGljZSIsInNlY3MiLCJpbm5lclRleHQiLCJzZXRJbnRlcnZhbCIsIiQiLCJnZXQiLCJkYXRhIiwidGV4dCIsInBhcnRpY2lwYW50cyIsInNldEl0ZW0iLCJhbW91bnRfYm9yZWQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsWUFBTTtBQUNuQixRQUFNQyxTQUFTQyxFQUFFLFdBQUYsQ0FBZjs7QUFFQUEsTUFBRSxrQkFBRixFQUFzQixDQUF0QixFQUNLQyxnQkFETCxDQUNzQixPQUR0QixFQUMrQixZQUFXO0FBQ2xDQyxlQUFPQyxJQUFQLENBQVksS0FBS0MsSUFBakIsRUFBdUIsUUFBdkIsRUFBaUMsOEVBQWpDO0FBQ0gsS0FITDs7QUFLQSxhQUFTQyxpQkFBVCxHQUE2QjtBQUN6QkwsVUFBRU0sU0FBU0MsYUFBWCxFQUEwQkMsSUFBMUIsQ0FBK0IsZUFBL0IsRUFBZ0QsQ0FBaEQsRUFBbURDLGVBQW5ELENBQW1FLFVBQW5FO0FBQ0FULFVBQUUsa0JBQUYsRUFBc0JVLFdBQXRCLENBQWtDLE1BQWxDO0FBQ0g7O0FBRUQsYUFBU0MsT0FBVCxHQUFtQjtBQUNmLFlBQU1DLGNBQWNDLEtBQUtDLEtBQUwsQ0FBVyxFQUFFQyxhQUFhQyxPQUFiLENBQXFCLFdBQXJCLElBQW9DLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUF0QyxJQUE4RCxJQUF6RSxDQUFwQjtBQUNBLFlBQUlDLFFBQVFOLEtBQUtDLEtBQUwsQ0FBV0YsY0FBYyxJQUF6QixDQUFaO0FBQ0EsWUFBTVEsT0FBTyxPQUFJUCxLQUFLQyxLQUFMLENBQVdGLGNBQWMsRUFBekIsQ0FBSixFQUFtQ1MsS0FBbkMsQ0FBeUMsQ0FBQyxDQUExQyxDQUFiO0FBQ0EsWUFBTUMsT0FBTyxPQUFJVCxLQUFLQyxLQUFMLENBQVdGLFdBQVgsQ0FBSixFQUE4QlMsS0FBOUIsQ0FBb0MsQ0FBQyxDQUFyQyxDQUFiO0FBQ0FGLGdCQUFRQSxRQUFRLE9BQUlBLEtBQUosUUFBYUUsS0FBYixDQUFtQixDQUFDLENBQXBCLENBQVIsR0FBaUMsRUFBekM7O0FBRUF0QixlQUFPLENBQVAsRUFBVXdCLFNBQVYsUUFBeUJKLEtBQXpCLEdBQWlDQyxJQUFqQyxTQUF5Q0UsSUFBekM7QUFDQXBCLGVBQU9zQixXQUFQLENBQW1CYixPQUFuQixFQUE0QixHQUE1QjtBQUNIOztBQUVEYSxnQkFBWSxZQUFNO0FBQ2RDLFVBQUVDLEdBQUYsY0FBaUJYLGFBQWFDLE9BQWIsQ0FBcUIsa0JBQXJCLENBQWpCLGNBQW9FLFVBQUNXLElBQUQsRUFBVTtBQUMxRUYsY0FBRSxlQUFGLEVBQW1CRyxJQUFuQixDQUF3QkQsS0FBS0UsWUFBN0I7O0FBRUEsZ0JBQUdGLEtBQUtFLFlBQVIsRUFBc0I7QUFDbEIsb0JBQUcsQ0FBQ2QsYUFBYUMsT0FBYixDQUFxQixXQUFyQixDQUFKLEVBQXVDO0FBQ25DRCxpQ0FBYWUsT0FBYixDQUFxQixXQUFyQixFQUFrQyxJQUFJYixJQUFKLEdBQVdDLE9BQVgsRUFBbEM7QUFDSDs7QUFFRFA7O0FBRUEsb0JBQUdnQixLQUFLRSxZQUFMLEtBQXNCRixLQUFLSSxZQUE5QixFQUE0QztBQUN4QzFCO0FBQ0g7QUFDSjtBQUNKLFNBZEQ7QUFlSCxLQWhCRCxFQWdCRyxJQWhCSDtBQWlCSCxDQXpDRCIsImZpbGUiOiJyZWZyZXNoLXNjcmVlbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKCkgPT4ge1xuICAgIGNvbnN0IF90aW1lciA9IF8oJy5qcy10aW1lcicpO1xuXG4gICAgXygnLmpzLXNoYXJlLWxlc3NvbicpWzBdXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgd2luZG93Lm9wZW4odGhpcy5ocmVmLCAnX2JsYW5rJywgJ2hlaWdodD00NTAsIHdpZHRoPTY1MCwgbGVmdD0yMCwgbG9jYXRpb249bm8sIHRvcD0yMCwgdGl0bGViYXI9bm8sIG1lbnViYXI9bm8nKTtcbiAgICAgICAgfSk7ICBcblxuICAgIGZ1bmN0aW9uIGVuYWJsZU5leHRTZWN0aW9uKCkge1xuICAgICAgICBfKGRvY3VtZW50Lmxlc3NvbkNvbnRyb2wpLmZpbmQoJ1t0eXBlPXN1Ym1pdF0nKVswXS5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgIF8oJy5qcy1uZXh0LXNlY3Rpb24nKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF91cGRhdGUoKSB7XG4gICAgICAgIGNvbnN0IHRpbWVFbGFwc2VkID0gTWF0aC5mbG9vcigtKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdGFydFRpbWUnKSAtIG5ldyBEYXRlKCkuZ2V0VGltZSgpKSAvIDEwMDApO1xuICAgICAgICBsZXQgaG91cnMgPSBNYXRoLmZsb29yKHRpbWVFbGFwc2VkIC8gMzYwMCk7XG4gICAgICAgIGNvbnN0IG1pbnMgPSBgMCR7TWF0aC5mbG9vcih0aW1lRWxhcHNlZCAvIDYwKX1gLnNsaWNlKC0yKTtcbiAgICAgICAgY29uc3Qgc2VjcyA9IGAwJHtNYXRoLmZsb29yKHRpbWVFbGFwc2VkKX1gLnNsaWNlKC0yKTtcbiAgICAgICAgaG91cnMgPSBob3VycyA/IGAwJHtob3Vyc306YC5zbGljZSgtMikgOiAnJztcblxuICAgICAgICBfdGltZXJbMF0uaW5uZXJUZXh0ID0gYCR7aG91cnN9JHttaW5zfToke3NlY3N9YDtcbiAgICAgICAgd2luZG93LnNldEludGVydmFsKF91cGRhdGUsIDEwMCk7XG4gICAgfVxuXG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAkLmdldChgL2xlc3Nvbi8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdsZWN0dXJlckxlc3NvbklkJyl9L3VwZGF0ZWAsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAkKCcjcGFydGljaXBhbnRzJykudGV4dChkYXRhLnBhcnRpY2lwYW50cyk7XG5cbiAgICAgICAgICAgIGlmKGRhdGEucGFydGljaXBhbnRzKSB7XG4gICAgICAgICAgICAgICAgaWYoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdGFydFRpbWUnKSkge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc3RhcnRUaW1lJywgbmV3IERhdGUoKS5nZXRUaW1lKCkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIF91cGRhdGUoKTtcblxuICAgICAgICAgICAgICAgIGlmKGRhdGEucGFydGljaXBhbnRzID09PSBkYXRhLmFtb3VudF9ib3JlZCkge1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVOZXh0U2VjdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSwgMTAwMCk7XG59O1xuIl19
},{}],3:[function(require,module,exports){
'use strict';

module.exports = function (mod) {
    var _voteBored = _(mod);
    var _votedMessage = _('.js-voted-message');
    var participantId = localStorage.getItem('participantId') ? '/' + localStorage.getItem('participantId') : '';

    function pollSection() {
        setInterval(function () {
            $.get('/vote/' + localStorage.getItem('studentLessonId') + '/update', function (data) {
                if (data['lessonEnded']) {
                    window.location = '/lesson/ended';
                } else {
                    if (data['sectionNumber'] !== parseInt(localStorage.getItem('sectionNumber'))) {
                        localStorage.setItem('sectionNumber', data['sectionNumber']);
                        _votedMessage.addClass('hide');
                        _voteBored.removeClass('voting--disabled');
                    }
                }
            });
        }, 1000);
    }

    $.get('/addparticipant/' + localStorage.getItem('studentLessonId') + participantId, function (data) {
        if (!participantId) {
            localStorage.setItem('participantId', data['participantId']);
        }

        pollSection();

        _voteBored.find('.vote-section__links').forEach(function (link) {
            link.addEventListener('click', function (e) {
                e.preventDefault();

                if (!_voteBored.hasClass('voting--disabled')) {
                    var _link = _(e.currentTarget);

                    $.get(_link[0].href, function (data) {
                        if (data.success) {
                            _votedMessage.removeClass('hide');
                            _voteBored.addClass('voting--disabled');
                        }
                    });
                }
            });
        });
    });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1Ym1pdC12b3RlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtb2QiLCJfdm90ZUJvcmVkIiwiXyIsIl92b3RlZE1lc3NhZ2UiLCJwYXJ0aWNpcGFudElkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBvbGxTZWN0aW9uIiwic2V0SW50ZXJ2YWwiLCIkIiwiZ2V0IiwiZGF0YSIsIndpbmRvdyIsImxvY2F0aW9uIiwicGFyc2VJbnQiLCJzZXRJdGVtIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImZpbmQiLCJmb3JFYWNoIiwibGluayIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYXNDbGFzcyIsIl9saW5rIiwiY3VycmVudFRhcmdldCIsImhyZWYiLCJzdWNjZXNzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QixRQUFNQyxhQUFhQyxFQUFFRixHQUFGLENBQW5CO0FBQ0EsUUFBTUcsZ0JBQWdCRCxFQUFFLG1CQUFGLENBQXRCO0FBQ0EsUUFBTUUsZ0JBQWdCQyxhQUFhQyxPQUFiLENBQXFCLGVBQXJCLFVBQ1JELGFBQWFDLE9BQWIsQ0FBcUIsZUFBckIsQ0FEUSxHQUVaLEVBRlY7O0FBSUEsYUFBU0MsV0FBVCxHQUF1QjtBQUNuQkMsb0JBQVksWUFBTTtBQUNkQyxjQUFFQyxHQUFGLFlBQWVMLGFBQWFDLE9BQWIsQ0FBcUIsaUJBQXJCLENBQWYsY0FBaUUsVUFBQ0ssSUFBRCxFQUFVO0FBQ3ZFLG9CQUFHQSxLQUFLLGFBQUwsQ0FBSCxFQUF3QjtBQUNwQkMsMkJBQU9DLFFBQVA7QUFDSCxpQkFGRCxNQUVPO0FBQ0gsd0JBQUdGLEtBQUssZUFBTCxNQUEwQkcsU0FBU1QsYUFBYUMsT0FBYixDQUFxQixlQUFyQixDQUFULENBQTdCLEVBQThFO0FBQzFFRCxxQ0FBYVUsT0FBYixDQUFxQixlQUFyQixFQUFzQ0osS0FBSyxlQUFMLENBQXRDO0FBQ0FSLHNDQUFjYSxRQUFkLENBQXVCLE1BQXZCO0FBQ0FmLG1DQUFXZ0IsV0FBWCxDQUF1QixrQkFBdkI7QUFDSDtBQUNKO0FBQ0osYUFWRDtBQVdILFNBWkQsRUFZRyxJQVpIO0FBYUg7O0FBR0RSLE1BQUVDLEdBQUYsc0JBQXlCTCxhQUFhQyxPQUFiLENBQXFCLGlCQUFyQixDQUF6QixHQUFtRUYsYUFBbkUsRUFBb0YsVUFBQ08sSUFBRCxFQUFVO0FBQzFGLFlBQUcsQ0FBQ1AsYUFBSixFQUFtQjtBQUNmQyx5QkFBYVUsT0FBYixDQUFxQixlQUFyQixFQUFzQ0osS0FBSyxlQUFMLENBQXRDO0FBQ0g7O0FBRURKOztBQUVBTixtQkFBV2lCLElBQVgsQ0FBZ0Isc0JBQWhCLEVBQXdDQyxPQUF4QyxDQUFnRCxVQUFDQyxJQUFELEVBQVU7QUFDdERBLGlCQUFLQyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixVQUFTQyxDQUFULEVBQVk7QUFDdkNBLGtCQUFFQyxjQUFGOztBQUVBLG9CQUFHLENBQUN0QixXQUFXdUIsUUFBWCxDQUFvQixrQkFBcEIsQ0FBSixFQUE2QztBQUN6Qyx3QkFBTUMsUUFBUXZCLEVBQUVvQixFQUFFSSxhQUFKLENBQWQ7O0FBRUFqQixzQkFBRUMsR0FBRixDQUFNZSxNQUFNLENBQU4sRUFBU0UsSUFBZixFQUFxQixVQUFDaEIsSUFBRCxFQUFVO0FBQzNCLDRCQUFJQSxLQUFLaUIsT0FBVCxFQUFrQjtBQUNkekIsMENBQWNjLFdBQWQsQ0FBMEIsTUFBMUI7QUFDQWhCLHVDQUFXZSxRQUFYLENBQW9CLGtCQUFwQjtBQUNIO0FBQ0oscUJBTEQ7QUFNSDtBQUNKLGFBYkQ7QUFjSCxTQWZEO0FBZ0JILEtBdkJEO0FBd0JILENBaEREIiwiZmlsZSI6InN1Ym1pdC12b3RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobW9kKSA9PiB7XG4gICAgY29uc3QgX3ZvdGVCb3JlZCA9IF8obW9kKTtcbiAgICBjb25zdCBfdm90ZWRNZXNzYWdlID0gXygnLmpzLXZvdGVkLW1lc3NhZ2UnKTtcbiAgICBjb25zdCBwYXJ0aWNpcGFudElkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BhcnRpY2lwYW50SWQnKSBcbiAgICAgICAgICAgID8gYC8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYXJ0aWNpcGFudElkJyl9YFxuICAgICAgICAgICAgOiAnJztcblxuICAgIGZ1bmN0aW9uIHBvbGxTZWN0aW9uKCkge1xuICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAkLmdldChgL3ZvdGUvJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3R1ZGVudExlc3NvbklkJyl9L3VwZGF0ZWAsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYoZGF0YVsnbGVzc29uRW5kZWQnXSkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBgL2xlc3Nvbi9lbmRlZGA7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YVsnc2VjdGlvbk51bWJlciddICE9PSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2VjdGlvbk51bWJlcicpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlY3Rpb25OdW1iZXInLCBkYXRhWydzZWN0aW9uTnVtYmVyJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVkTWVzc2FnZS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVCb3JlZC5yZW1vdmVDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgIH1cblxuXG4gICAgJC5nZXQoYC9hZGRwYXJ0aWNpcGFudC8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdHVkZW50TGVzc29uSWQnKX0ke3BhcnRpY2lwYW50SWR9YCwgKGRhdGEpID0+IHtcbiAgICAgICAgaWYoIXBhcnRpY2lwYW50SWQpIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwYXJ0aWNpcGFudElkJywgZGF0YVsncGFydGljaXBhbnRJZCddKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHBvbGxTZWN0aW9uKCk7XG4gICAgICAgIFxuICAgICAgICBfdm90ZUJvcmVkLmZpbmQoJy52b3RlLXNlY3Rpb25fX2xpbmtzJykuZm9yRWFjaCgobGluaykgPT4ge1xuICAgICAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBpZighX3ZvdGVCb3JlZC5oYXNDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IF9saW5rID0gXyhlLmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgICAgICAgICAgICAgICAgICQuZ2V0KF9saW5rWzBdLmhyZWYsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVkTWVzc2FnZS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92b3RlQm9yZWQuYWRkQ2xhc3MoJ3ZvdGluZy0tZGlzYWJsZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gICBcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbiJdfQ==
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
