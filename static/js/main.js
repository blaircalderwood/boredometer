(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var mods = {
    refreshScreen: require('./refresh-screen'),
    submitVote: require('./submit-vote')
};

var _modules = _('[data-mod]');

if (_modules) {
    _modules.forEach(function (mod) {
        var name = mod.getAttribute('data-mod').split(/-/).reduce(function (sum, val) {
            return sum + (val.charAt(0).toUpperCase() + val.slice(1));
        }, '');

        mods[name.charAt(0).toLowerCase() + name.slice(1)](mod);
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfNmRmNTI0NTAuanMiXSwibmFtZXMiOlsibW9kcyIsInJlZnJlc2hTY3JlZW4iLCJyZXF1aXJlIiwic3VibWl0Vm90ZSIsIl9tb2R1bGVzIiwiXyIsImZvckVhY2giLCJtb2QiLCJuYW1lIiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJzdW0iLCJ2YWwiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTztBQUNUQyxtQkFBZUMsUUFBUSxrQkFBUixDQUROO0FBRVRDLGdCQUFZRCxRQUFRLGVBQVI7QUFGSCxDQUFiOztBQU1BLElBQU1FLFdBQVdDLEVBQUUsWUFBRixDQUFqQjs7QUFFQSxJQUFHRCxRQUFILEVBQWE7QUFDVEEsYUFBU0UsT0FBVCxDQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEIsWUFBTUMsT0FBT0QsSUFBSUUsWUFBSixDQUFpQixVQUFqQixFQUE2QkMsS0FBN0IsQ0FBbUMsR0FBbkMsRUFBd0NDLE1BQXhDLENBQStDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RFLG1CQUFPRCxPQUFPQyxJQUFJQyxNQUFKLENBQVcsQ0FBWCxFQUFjQyxXQUFkLEtBQThCRixJQUFJRyxLQUFKLENBQVUsQ0FBVixDQUFyQyxDQUFQO0FBQ0gsU0FGWSxFQUVWLEVBRlUsQ0FBYjs7QUFJQWhCLGFBQUtRLEtBQUtNLE1BQUwsQ0FBWSxDQUFaLEVBQWVHLFdBQWYsS0FBK0JULEtBQUtRLEtBQUwsQ0FBVyxDQUFYLENBQXBDLEVBQW1EVCxHQUFuRDtBQUNILEtBTkQ7QUFPSCIsImZpbGUiOiJmYWtlXzZkZjUyNDUwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9kcyA9IHtcbiAgICByZWZyZXNoU2NyZWVuOiByZXF1aXJlKCcuL3JlZnJlc2gtc2NyZWVuJyksXG4gICAgc3VibWl0Vm90ZTogcmVxdWlyZSgnLi9zdWJtaXQtdm90ZScpXG59O1xuXG5cbmNvbnN0IF9tb2R1bGVzID0gXygnW2RhdGEtbW9kXScpO1xuXG5pZihfbW9kdWxlcykge1xuICAgIF9tb2R1bGVzLmZvckVhY2goKG1vZCkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0gbW9kLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2QnKS5zcGxpdCgvLS8pLnJlZHVjZSgoc3VtLCB2YWwpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBzdW0gKyAodmFsLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdmFsLnNsaWNlKDEpKTtcbiAgICAgICAgfSwgJycpO1xuXG4gICAgICAgIG1vZHNbbmFtZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIG5hbWUuc2xpY2UoMSldKG1vZCk7XG4gICAgfSk7XG59XG4iXX0=
},{"./refresh-screen":2,"./submit-vote":3}],2:[function(require,module,exports){
'use strict';

module.exports = function () {
    var _timer = _('.js-timer');

    function enableNextSection() {
        _(document.lessonControl).find('[type=submit]')[0].removeAttribute('disabled');
        _('.js-next-section').removeClass('hide');
    }

    function _update() {
        var timeElapsed = Math.floor(-(localStorage.getItem('startTime') - new Date().getTime()) / 1000);
        var hours = Math.floor(timeElapsed / 3600);
        var mins = ('0' + Math.floor(timeElapsed / 60)).slice(-2);
        var secs = ('0' + Math.floor(timeElapsed)).slice(-2);
        hours = hours ? ('0' + hours + ':').slice(-2) : '';

        _timer[0].innerText = '' + hours + mins + ':' + secs;
        window.setInterval(_update, 100);
    }

    setInterval(function () {
        $.get('/lesson/' + localStorage.getItem('lecturerLessonId') + '/update', function (data) {
            $('#participants').text(data.participants);

            if (data.participants) {
                if (!localStorage.getItem('startTime')) {
                    localStorage.setItem('startTime', new Date().getTime());
                }

                _update();

                if (data.participants === data.amount_bored) {
                    enableNextSection();
                }
            }
        });
    }, 1000);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZnJlc2gtc2NyZWVuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJfdGltZXIiLCJfIiwiZW5hYmxlTmV4dFNlY3Rpb24iLCJkb2N1bWVudCIsImxlc3NvbkNvbnRyb2wiLCJmaW5kIiwicmVtb3ZlQXR0cmlidXRlIiwicmVtb3ZlQ2xhc3MiLCJfdXBkYXRlIiwidGltZUVsYXBzZWQiLCJNYXRoIiwiZmxvb3IiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiRGF0ZSIsImdldFRpbWUiLCJob3VycyIsIm1pbnMiLCJzbGljZSIsInNlY3MiLCJpbm5lclRleHQiLCJ3aW5kb3ciLCJzZXRJbnRlcnZhbCIsIiQiLCJnZXQiLCJkYXRhIiwidGV4dCIsInBhcnRpY2lwYW50cyIsInNldEl0ZW0iLCJhbW91bnRfYm9yZWQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsWUFBTTtBQUNuQixRQUFNQyxTQUFTQyxFQUFFLFdBQUYsQ0FBZjs7QUFFQSxhQUFTQyxpQkFBVCxHQUE2QjtBQUN6QkQsVUFBRUUsU0FBU0MsYUFBWCxFQUEwQkMsSUFBMUIsQ0FBK0IsZUFBL0IsRUFBZ0QsQ0FBaEQsRUFBbURDLGVBQW5ELENBQW1FLFVBQW5FO0FBQ0FMLFVBQUUsa0JBQUYsRUFBc0JNLFdBQXRCLENBQWtDLE1BQWxDO0FBQ0g7O0FBRUQsYUFBU0MsT0FBVCxHQUFtQjtBQUNmLFlBQU1DLGNBQWNDLEtBQUtDLEtBQUwsQ0FBVyxFQUFFQyxhQUFhQyxPQUFiLENBQXFCLFdBQXJCLElBQW9DLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUF0QyxJQUE4RCxJQUF6RSxDQUFwQjtBQUNBLFlBQUlDLFFBQVFOLEtBQUtDLEtBQUwsQ0FBV0YsY0FBYyxJQUF6QixDQUFaO0FBQ0EsWUFBTVEsT0FBTyxPQUFJUCxLQUFLQyxLQUFMLENBQVdGLGNBQWMsRUFBekIsQ0FBSixFQUFtQ1MsS0FBbkMsQ0FBeUMsQ0FBQyxDQUExQyxDQUFiO0FBQ0EsWUFBTUMsT0FBTyxPQUFJVCxLQUFLQyxLQUFMLENBQVdGLFdBQVgsQ0FBSixFQUE4QlMsS0FBOUIsQ0FBb0MsQ0FBQyxDQUFyQyxDQUFiO0FBQ0FGLGdCQUFRQSxRQUFRLE9BQUlBLEtBQUosUUFBYUUsS0FBYixDQUFtQixDQUFDLENBQXBCLENBQVIsR0FBaUMsRUFBekM7O0FBRUFsQixlQUFPLENBQVAsRUFBVW9CLFNBQVYsUUFBeUJKLEtBQXpCLEdBQWlDQyxJQUFqQyxTQUF5Q0UsSUFBekM7QUFDQUUsZUFBT0MsV0FBUCxDQUFtQmQsT0FBbkIsRUFBNEIsR0FBNUI7QUFDSDs7QUFFRGMsZ0JBQVksWUFBTTtBQUNkQyxVQUFFQyxHQUFGLGNBQWlCWixhQUFhQyxPQUFiLENBQXFCLGtCQUFyQixDQUFqQixjQUFvRSxVQUFDWSxJQUFELEVBQVU7QUFDMUVGLGNBQUUsZUFBRixFQUFtQkcsSUFBbkIsQ0FBd0JELEtBQUtFLFlBQTdCOztBQUVBLGdCQUFHRixLQUFLRSxZQUFSLEVBQXNCO0FBQ2xCLG9CQUFHLENBQUNmLGFBQWFDLE9BQWIsQ0FBcUIsV0FBckIsQ0FBSixFQUF1QztBQUNuQ0QsaUNBQWFnQixPQUFiLENBQXFCLFdBQXJCLEVBQWtDLElBQUlkLElBQUosR0FBV0MsT0FBWCxFQUFsQztBQUNIOztBQUVEUDs7QUFFQSxvQkFBR2lCLEtBQUtFLFlBQUwsS0FBc0JGLEtBQUtJLFlBQTlCLEVBQTRDO0FBQ3hDM0I7QUFDSDtBQUNKO0FBQ0osU0FkRDtBQWVILEtBaEJELEVBZ0JHLElBaEJIO0FBaUJILENBcENEIiwiZmlsZSI6InJlZnJlc2gtc2NyZWVuLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XG4gICAgY29uc3QgX3RpbWVyID0gXygnLmpzLXRpbWVyJyk7XG5cbiAgICBmdW5jdGlvbiBlbmFibGVOZXh0U2VjdGlvbigpIHtcbiAgICAgICAgXyhkb2N1bWVudC5sZXNzb25Db250cm9sKS5maW5kKCdbdHlwZT1zdWJtaXRdJylbMF0ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICBfKCcuanMtbmV4dC1zZWN0aW9uJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfdXBkYXRlKCkge1xuICAgICAgICBjb25zdCB0aW1lRWxhcHNlZCA9IE1hdGguZmxvb3IoLShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3RhcnRUaW1lJykgLSBuZXcgRGF0ZSgpLmdldFRpbWUoKSkgLyAxMDAwKTtcbiAgICAgICAgbGV0IGhvdXJzID0gTWF0aC5mbG9vcih0aW1lRWxhcHNlZCAvIDM2MDApO1xuICAgICAgICBjb25zdCBtaW5zID0gYDAke01hdGguZmxvb3IodGltZUVsYXBzZWQgLyA2MCl9YC5zbGljZSgtMik7XG4gICAgICAgIGNvbnN0IHNlY3MgPSBgMCR7TWF0aC5mbG9vcih0aW1lRWxhcHNlZCl9YC5zbGljZSgtMik7XG4gICAgICAgIGhvdXJzID0gaG91cnMgPyBgMCR7aG91cnN9OmAuc2xpY2UoLTIpIDogJyc7XG5cbiAgICAgICAgX3RpbWVyWzBdLmlubmVyVGV4dCA9IGAke2hvdXJzfSR7bWluc306JHtzZWNzfWA7XG4gICAgICAgIHdpbmRvdy5zZXRJbnRlcnZhbChfdXBkYXRlLCAxMDApO1xuICAgIH1cblxuICAgIHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgJC5nZXQoYC9sZXNzb24vJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbGVjdHVyZXJMZXNzb25JZCcpfS91cGRhdGVgLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgJCgnI3BhcnRpY2lwYW50cycpLnRleHQoZGF0YS5wYXJ0aWNpcGFudHMpO1xuXG4gICAgICAgICAgICBpZihkYXRhLnBhcnRpY2lwYW50cykge1xuICAgICAgICAgICAgICAgIGlmKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3RhcnRUaW1lJykpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3N0YXJ0VGltZScsIG5ldyBEYXRlKCkuZ2V0VGltZSgpKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBfdXBkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICBpZihkYXRhLnBhcnRpY2lwYW50cyA9PT0gZGF0YS5hbW91bnRfYm9yZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlTmV4dFNlY3Rpb24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEwMDApO1xufTtcbiJdfQ==
},{}],3:[function(require,module,exports){
'use strict';

module.exports = function (mod) {
    var _voteBored = _(mod);
    var _votedMessage = _('.js-voted-message');
    var participantId = localStorage.getItem('participantId') ? '/' + localStorage.getItem('participantId') : '';

    function pollSection() {
        setInterval(function () {
            $.get('/vote/' + localStorage.getItem('studentLessonId') + '/update', function (data) {
                if (data['sectionNumber'] !== parseInt(localStorage.getItem('sectionNumber'))) {
                    localStorage.setItem('sectionNumber', data['sectionNumber']);
                    _votedMessage.addClass('hide');
                    _voteBored.removeClass('voting--disabled');
                }
            });
        }, 1000);
    }

    $.get('/addparticipant/' + localStorage.getItem('studentLessonId') + participantId, function (data) {
        if (!participantId) {
            localStorage.setItem('participantId', data['participantId']);
        }

        _voteBored.find('.vote-section__links').forEach(function (link) {
            link.addEventListener('click', function (e) {
                e.preventDefault();

                if (!_voteBored.hasClass('voting--disabled')) {
                    var _link = _(e.currentTarget);

                    $.get(_link[0].href, function (data) {
                        if (data.success) {
                            _votedMessage.removeClass('hide');
                            _voteBored.addClass('voting--disabled');
                            pollSection();
                        }
                    });
                }
            });
        });
    });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1Ym1pdC12b3RlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtb2QiLCJfdm90ZUJvcmVkIiwiXyIsIl92b3RlZE1lc3NhZ2UiLCJwYXJ0aWNpcGFudElkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBvbGxTZWN0aW9uIiwic2V0SW50ZXJ2YWwiLCIkIiwiZ2V0IiwiZGF0YSIsInBhcnNlSW50Iiwic2V0SXRlbSIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJmaW5kIiwiZm9yRWFjaCIsImxpbmsiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwiaGFzQ2xhc3MiLCJfbGluayIsImN1cnJlbnRUYXJnZXQiLCJocmVmIiwic3VjY2VzcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEIsUUFBTUMsYUFBYUMsRUFBRUYsR0FBRixDQUFuQjtBQUNBLFFBQU1HLGdCQUFnQkQsRUFBRSxtQkFBRixDQUF0QjtBQUNBLFFBQU1FLGdCQUFnQkMsYUFBYUMsT0FBYixDQUFxQixlQUFyQixVQUNSRCxhQUFhQyxPQUFiLENBQXFCLGVBQXJCLENBRFEsR0FFWixFQUZWOztBQUlBLGFBQVNDLFdBQVQsR0FBdUI7QUFDbkJDLG9CQUFZLFlBQU07QUFDZEMsY0FBRUMsR0FBRixZQUFlTCxhQUFhQyxPQUFiLENBQXFCLGlCQUFyQixDQUFmLGNBQWlFLFVBQUNLLElBQUQsRUFBVTtBQUN2RSxvQkFBR0EsS0FBSyxlQUFMLE1BQTBCQyxTQUFTUCxhQUFhQyxPQUFiLENBQXFCLGVBQXJCLENBQVQsQ0FBN0IsRUFBOEU7QUFDMUVELGlDQUFhUSxPQUFiLENBQXFCLGVBQXJCLEVBQXNDRixLQUFLLGVBQUwsQ0FBdEM7QUFDQVIsa0NBQWNXLFFBQWQsQ0FBdUIsTUFBdkI7QUFDQWIsK0JBQVdjLFdBQVgsQ0FBdUIsa0JBQXZCO0FBQ0g7QUFDSixhQU5EO0FBT0gsU0FSRCxFQVFHLElBUkg7QUFTSDs7QUFHRE4sTUFBRUMsR0FBRixzQkFBeUJMLGFBQWFDLE9BQWIsQ0FBcUIsaUJBQXJCLENBQXpCLEdBQW1FRixhQUFuRSxFQUFvRixVQUFDTyxJQUFELEVBQVU7QUFDMUYsWUFBRyxDQUFDUCxhQUFKLEVBQW1CO0FBQ2ZDLHlCQUFhUSxPQUFiLENBQXFCLGVBQXJCLEVBQXNDRixLQUFLLGVBQUwsQ0FBdEM7QUFDSDs7QUFFRFYsbUJBQVdlLElBQVgsQ0FBZ0Isc0JBQWhCLEVBQXdDQyxPQUF4QyxDQUFnRCxVQUFDQyxJQUFELEVBQVU7QUFDdERBLGlCQUFLQyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixVQUFTQyxDQUFULEVBQVk7QUFDdkNBLGtCQUFFQyxjQUFGOztBQUVBLG9CQUFHLENBQUNwQixXQUFXcUIsUUFBWCxDQUFvQixrQkFBcEIsQ0FBSixFQUE2QztBQUN6Qyx3QkFBTUMsUUFBUXJCLEVBQUVrQixFQUFFSSxhQUFKLENBQWQ7O0FBRUFmLHNCQUFFQyxHQUFGLENBQU1hLE1BQU0sQ0FBTixFQUFTRSxJQUFmLEVBQXFCLFVBQUNkLElBQUQsRUFBVTtBQUMzQiw0QkFBSUEsS0FBS2UsT0FBVCxFQUFrQjtBQUNkdkIsMENBQWNZLFdBQWQsQ0FBMEIsTUFBMUI7QUFDQWQsdUNBQVdhLFFBQVgsQ0FBb0Isa0JBQXBCO0FBQ0FQO0FBQ0g7QUFDSixxQkFORDtBQU9IO0FBQ0osYUFkRDtBQWVILFNBaEJEO0FBaUJILEtBdEJEO0FBdUJILENBM0NEIiwiZmlsZSI6InN1Ym1pdC12b3RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAobW9kKSA9PiB7XG4gICAgY29uc3QgX3ZvdGVCb3JlZCA9IF8obW9kKTtcbiAgICBjb25zdCBfdm90ZWRNZXNzYWdlID0gXygnLmpzLXZvdGVkLW1lc3NhZ2UnKTtcbiAgICBjb25zdCBwYXJ0aWNpcGFudElkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3BhcnRpY2lwYW50SWQnKSBcbiAgICAgICAgICAgID8gYC8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdwYXJ0aWNpcGFudElkJyl9YFxuICAgICAgICAgICAgOiAnJztcblxuICAgIGZ1bmN0aW9uIHBvbGxTZWN0aW9uKCkge1xuICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAkLmdldChgL3ZvdGUvJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3R1ZGVudExlc3NvbklkJyl9L3VwZGF0ZWAsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYoZGF0YVsnc2VjdGlvbk51bWJlciddICE9PSBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2VjdGlvbk51bWJlcicpKSkge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2VjdGlvbk51bWJlcicsIGRhdGFbJ3NlY3Rpb25OdW1iZXInXSk7XG4gICAgICAgICAgICAgICAgICAgIF92b3RlZE1lc3NhZ2UuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICAgICAgX3ZvdGVCb3JlZC5yZW1vdmVDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICB9XG5cblxuICAgICQuZ2V0KGAvYWRkcGFydGljaXBhbnQvJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3R1ZGVudExlc3NvbklkJyl9JHtwYXJ0aWNpcGFudElkfWAsIChkYXRhKSA9PiB7XG4gICAgICAgIGlmKCFwYXJ0aWNpcGFudElkKSB7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFydGljaXBhbnRJZCcsIGRhdGFbJ3BhcnRpY2lwYW50SWQnXSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIF92b3RlQm9yZWQuZmluZCgnLnZvdGUtc2VjdGlvbl9fbGlua3MnKS5mb3JFYWNoKChsaW5rKSA9PiB7XG4gICAgICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICAgIGlmKCFfdm90ZUJvcmVkLmhhc0NsYXNzKCd2b3RpbmctLWRpc2FibGVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgX2xpbmsgPSBfKGUuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICAgICAgICAgICAgICAgJC5nZXQoX2xpbmtbMF0uaHJlZiwgKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm90ZWRNZXNzYWdlLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZvdGVCb3JlZC5hZGRDbGFzcygndm90aW5nLS1kaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvbGxTZWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4iXX0=
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
